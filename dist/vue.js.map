{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/dep.js","../src/observe/index.js","../src/state.js","../src/compiler/parse.js","../src/compiler/index.js","../src/vdom/index.js","../src/observe/watcher.js","../src/lifecycle.js","../src/utils.js","../src/init.js","../src/globalAPI.js","../src/index.js"],"sourcesContent":["\nlet oldArrayProto = Array.prototype\n\nexport const newArrayProto = Object.create(oldArrayProto)\n\nlet methods = [\n    'push',\n    'pop',\n    'shift',\n    'unshift',\n    'reverse',\n    'splice',\n    'sort'\n]\n\nmethods.forEach(method =>{\n    newArrayProto[method] =  function (...args){\n        let ob = this.__ob__\n        const result = oldArrayProto[method].call(this, ...args)\n        let inserted\n        switch (method) {\n            case 'push':\n            case 'unshift':\n                inserted = args\n                break\n            case 'splice':  //arr.splice(0, 1, {a: 1})\n                inserted = arr.slice(2)\n                break\n            default:\n                break\n        }\n        if(inserted){\n            //需要对数组中新增的对象进行劫持\n            ob.observeArray(inserted)\n        }\n        ob.dep.notify()\n        return result\n    }\n})\n","let id = 0\n\n// 每个属性有一个dep （属性就是被观察者） ， watcher就是观察者（属性变化了会通知观察者来更新） -》 观察者模式\nclass Dep {\n    constructor() {\n        this.id = id++\n        this.subs = []\n    }\n    depend(){\n        // this.subs.push(Dep.target)   // 没有进行去重操作 相同数据会创建多个watcher\n        Dep.target.addDep(this)\n    }\n    addWat(watcher){\n        this.subs.push(watcher)\n    }\n    notify(){\n        this.subs.forEach(watcher => {\n            watcher.update()\n        })\n    }\n}\nDep.target = null\n\nexport default Dep","import { newArrayProto } from \"./array\";\nimport Dep from \"./dep\";\n\nclass Observer{\n    constructor(data) {\n        this.dep = new Dep()\n        //如果data是对象的话 就会出现循环遍历的情况 所以要避免循环遍历 __ob__ enumerable设置为false\n        Object.defineProperty(data, '__ob__',{\n            value: this,\n            enumerable: false\n        })\n        // data.__ob__ = this  //给观测类添加一个属性 方便调用类中的方法 同时也可以利用该属性做判断对象是否已经监测过了\n        if(Array.isArray(data)){\n            data.__proto__ =  newArrayProto\n            //重写数组的七个方法\n            this.observeArray(data)\n        }else{\n            //对data中已经存在的属性进行劫持 新增的和删除的无法劫持 需要使用$set $delete\n            this.walk(data)\n        }\n\n    }\n    observeArray(data){\n        //观测数组中的对象\n        data.forEach(item => observe(item))\n    }\n    walk(data){\n        Object.keys(data).forEach(key => defineReactive(data,key,data[key]))\n    }\n}\n// 递归遍历数组进行更新\nfunction dependArray(value) {\n    for(let i= 0;i <value.length; i++){\n        let cur = value[i]\n        cur.__ob__ && cur.__ob__.dep.depend()\n        if(Array.isArray(cur)){\n            dependArray(cur)\n        }\n    }\n}\n\nexport function defineReactive(target,key, value) {\n    //对象中的value 是对象的话 要递归进行数据劫持\n    let childOB = observe(value)\n    let dep = new Dep()     // 每一个属性都有一个Dep\n    Object.defineProperty(target, key,{\n        get(){\n            if(Dep.target){\n                dep.depend()\n                if(childOB){\n                    childOB.dep.depend()\n                    if(Array.isArray(value)){\n                        dependArray(value)\n                    }\n\n                }\n            }\n            return value\n        },\n        set(newValue){\n            if(newValue === value)  return\n            observe(newValue)\n            value = newValue\n            //数据变化 通知视图更新\n            dep.notify()\n        }\n    })\n}\nexport function observe(data) {\n    //只对 对象进行劫持\n    if(typeof data !== 'object' || data === null) return\n    if(data.__ob__ instanceof Observer) return  //对象已经被代理过了\n    return new Observer(data)\n}","//初始化状态\nimport { observe } from \"./observe/index\";\n\nexport function initState(vm) {\n    const ops = vm.$options\n    if(ops.data){\n        initData(vm)\n    }\n}\n\nfunction proxy(vm, target, key) {\n    Object.defineProperty(vm,key, {\n        get(){\n            return vm[target][key]\n        },\n        set(newValue){\n            vm[target][key] = newValue\n        }\n    })\n}\n\nfunction initData(vm){\n\n    let data = vm.$options.data     //data可能是函数和对象\n\n    data = typeof data === 'function' ? data.call(vm) : data\n\n    vm._data = data\n\n    //对数据进行劫持 vue2采用的是Object.defineProperty\n    observe(data)\n\n    //将vm._data进行代理 便于访问\n    for(let key in data){\n        proxy(vm,'_data', key)\n    }\n}\n","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 他匹配到的分组是一个 标签名  <xxx 匹配到的是开始 标签的名字\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);  // 匹配的是</xxxx>  最终匹配到的分组就是结束标签的名字\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;  // 匹配属性\n// 第一个分组就是属性的key value 就是 分组3/分组4/分组五\nconst startTagClose = /^\\s*(\\/?)>/;  // <div> <br/>\n\nexport function parseHTML(html) {\n\n    const ELEMENT_TYPE = 1  // 节点类型\n    const TEXT_TYPE = 3     // 文本类型\n    const stack = []\n    let currentParent   //用于指向栈中的最后一个元素\n    let root\n\n    //最终需要转化成AST语法树\n    function createASTElement(tag, attrs) {\n        return {\n            tag,\n            type: ELEMENT_TYPE,\n            children: [],\n            attrs,\n            parent: null\n        }\n    }\n\n    function start(tag, attrs) {\n        let node = createASTElement(tag, attrs)\n        if(!root){  //根节点赋值\n            root = node\n        }\n        if(currentParent){\n            node.parent = currentParent\n            // 节点是当前父节点的子节点\n            currentParent.children.push(node)\n        }\n        stack.push(node)\n        currentParent = node    //curentParent为栈中最后一个\n    }\n    function char(text) {\n        // 去重操作\n        text = text.replace(/\\s/g,' ')\n        text && currentParent.children.push({\n            type: TEXT_TYPE,\n            text,\n            parent: currentParent\n        })\n    }\n\n    function end(tag) {\n        let node = stack.pop()  //弹出栈中最后一个节点\n        currentParent = stack[stack.length - 1]\n    }\n\n    function advance(n) {\n        html = html.substring(n)\n    }\n    function parseStartag(){\n        const start = html.match(startTagOpen)\n        if(start){\n            let match = {\n                tagName: start[1],\n                attrs: []\n            }\n            advance(start[0].length)\n            let attr, endMatch\n            while(!(endMatch = html.match(startTagClose)) && (attr = html.match(attribute))){\n                advance(attr[0].length)\n                match.attrs.push({name: attr[1], value: attr[3] || attr[4] || attr[5]})\n            }\n            if(endMatch){\n                advance(endMatch[0].length)\n            }\n            return match\n        }\n        //匹配属性\n\n        return false\n    }\n\n    while(html){\n        let textEnd = html.indexOf('<')   //如果indexof中的索引是0 则说明是个标签 textEnd为0 说明是开始或者结束标签\n        if(textEnd === 0){\n            const startTagMatch = parseStartag()\n            if(startTagMatch){\n                start(startTagMatch.tagName, startTagMatch.attrs)\n                continue\n            }\n            let endTagName = html.match(endTag)\n            if(endTagName){\n                advance(endTagName[0].length)\n                end(endTagName[1])\n                continue\n            }\n            break\n        }\n        if(textEnd > 0){\n            let text = html.substring(0, textEnd)\n            if(text){\n                char(text)\n                advance(text.length)\n            }\n        }\n    }\n    return root\n}","import { parseHTML } from \"./parse\";\n\n//生成属性\nfunction genprops(attrs) {\n    let str = ''\n    for(let i= 0;i<attrs.length; i++){\n        if(attrs[i].name === 'style'){\n            let obj = {}\n            attrs[i].value.split(';').forEach(item =>{\n                let [key, value] = item.split(':')\n                key = key.trim()\n                value = value.trim()\n                obj[key] = value\n            })\n            attrs[i].value = obj\n        }\n        str += `${attrs[i].name}:${JSON.stringify(attrs[i].value) },`\n    }\n    //去掉最末端的逗号\n    return `{${str.slice(0,-1)}}`\n}\n\n//处理节点的children\nfunction genChildren(children) {\n    return children.map(child => gen(child)).join(',')\n}\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // {{ asdsadsa }}  匹配到的内容就是我们表达式的变量\nfunction gen(node) {\n    if(node.type === 1){\n        return codegen(node)\n    }else{\n        // 文本节点\n         let text = node.text\n         if(!defaultTagRE.test(text)){\n             return `_v(${JSON.stringify(text)})`\n         }else{\n             // _v(_s(name)+ 'hello' + _s(name))\n             let tokens = []\n             let match\n             //正则有g 会记录位置 为了循环能够一直执行 需要重置lastIndex位置\n             defaultTagRE.lastIndex = 0\n             let lastIndex = 0\n             while(match = defaultTagRE.exec(text)){        // hello  {{ name }} hello {{age}} hi\n                 //根据索引的位置 获取差值表达式 和 普通文本\n                 let index = match.index\n                 if(index > lastIndex){\n                     tokens.push(JSON.stringify(text.slice(lastIndex, index)))\n                 }\n                 tokens.push(`_s(${match[1].trim()})`)\n                 lastIndex = index + match[0].length\n\n             }\n             //截取最后的普通文本\n             if(lastIndex < text.length){\n                 tokens.push(JSON.stringify(text.slice(lastIndex)))\n             }\n             return `_v(${tokens.join('+')})`\n         }\n    }\n}\n\n//代码生成方法\nfunction codegen(ast) {\n\n    const children = genChildren(ast.children)\n    const code = (`_c('${ast.tag}',${ast.attrs.length ? genprops(ast.attrs) : 'null' }\n    ${ast.children.length ? `,${children}` : ''}\n    )`)\n\n    return code\n}\n// 对模板进行编译处理\nexport function compileToFunction(template) {\n    // 1. 将template转化成AST语法树\n    let ast = parseHTML(template)\n\n    //2. 生成render方法  （render方法执行后的结果就是虚拟DOM）\n    let code = codegen(ast)\n\n    //模板引擎的实现原理 就是 with + new Function\n    code = `with(this){return ${code}}`\n\n    let render = new Function(code)\n    return render\n\n}","export function createElementVnode(vm, tag, data, ...children) {\n    let key = data?.key\n    key ? delete data.key : ''\n    return vnode(vm,tag,key, data, children)\n}\n\nexport function createTextVnode(vm, text) {\n    return vnode(vm, undefined, undefined, undefined, undefined, text)\n}\n/*\n* ast 是语法层面的转化 描述得是语法本身（js css html）\n*   而虚拟DOM描述的是DOM元素 可以增加一些自定义属性*/\nfunction vnode(vm, tag, key, props, children, text) {\n    return {\n        vm,\n        tag,\n        key,\n        props,\n        children,\n        text\n    }\n}","import Dep from \"./dep\";\n\nlet id = 0\n\nclass Watcher {\n    // 每个组件分配一个watcher\n    constructor(vm, fn, options) {\n        this.id = id++\n        this.getter = fn\n        this.renderWatcher = options\n        this.deps = []  // 后序实现计算属性 和 一些清理工作需要用到\n        this.depsIDSet = new Set()\n        this.get()\n    }\n\n    get() {\n        Dep.target = this   // 静态属性赋值\n        this.getter()\n        Dep.target = null\n    }\n\n    addDep(dep) {\n        if (!this.depsIDSet.has(dep.id)) {\n            this.deps.push(dep)\n            this.depsIDSet.add(dep.id)\n            dep.addWat(this)\n        }\n    }\n\n    update() {\n        // this.get()  // 重新渲染\n        queueWatcher(this)  //\n    }\n\n    run() {\n        console.log('run')\n        this.get()\n    }\n\n}\n\nlet queue = []\nlet has = {}\nlet flag = false\n\nfunction flushSchedulerQueue() {\n    let flushQueue = queue.slice(0)\n    queue = []\n    has = {}\n    flag = false\n    flushQueue.forEach(item => item.run())      //在数据更新的过程中 如果数据再次发生变化 则放进下一轮的更新中\n}\n\nfunction queueWatcher(watcher) {\n    let id = watcher.id\n    if (!has[id]) {\n        // 实现去重操作  相同属性值变化只更新一次\n        queue.push(watcher)\n        has[id] = true\n\n        if (!flag) {\n            nextTick(flushSchedulerQueue, 0)\n            flag = true\n        }\n    }\n}\n\nlet callbacks = []\nlet waiting = false\n\nfunction flushCallbacks() {\n    let cbs = callbacks.slice(0)\n    callbacks = []\n    waiting = false\n    cbs.forEach(cb => cb())\n}\n\nlet timerFunc\nif (Promise) {\n    timerFunc = () => {\n        Promise.resolve().then(flushCallbacks)\n    }\n} else if (MutationObserver) {\n    const observer = new MutationObserver(flushCallbacks)\n    let textNode = document.createTextNode(1)\n    observer.observe(textNode, {characterData: true})\n\n    timerFunc = () => {\n        textNode.textContent = 2\n    }\n} else if(setImmediate){\n    timerFunc = () => setImmediate(flushCallbacks)\n}else {\n    timerFunc = () => setTimeout(flushCallbacks, 0)\n}\n\n\nexport function nextTick(cb) {\n    callbacks.push(cb)\n    if (!waiting) {\n        waiting = true\n        timerFunc(flushCallbacks)\n    }\n}\n\nexport default Watcher\n// 每个属性增加一个dep 目的是收集watcher\n","import { createElementVnode, createTextVnode } from \"./vdom\";\nimport Watcher from \"./observe/watcher\";\nexport function initLifeCycle(Vue) {\n    //根据虚拟DOM生成真实DOM\n    Vue.prototype._update = function (vnode){\n        const vm = this\n        const el = vm.$el\n        //既有初始化功能 也有更新的功能\n        vm.$el = patch(el, vnode)\n    }\n    //_c('div',{},children)  div null undefined\n    Vue.prototype._c = function (){\n        return createElementVnode(this, ...arguments)\n    }\n    Vue.prototype._s = function (value){\n        if(typeof value !== 'object')   return value\n        return JSON.stringify(value)\n    }\n    Vue.prototype._v = function (){\n        return createTextVnode(this, ...arguments)\n    }\n    //生成虚拟DOM 虚拟节点\n    Vue.prototype._render = function (){\n        return this.$options.render.call(this)\n    }\n\n}\n\nexport function mountComponent(vm, el){\n    function updateComponent() {\n        vm._update(vm._render())\n    }\n    vm.$el = el\n    //1. 调用render方法产生虚拟节点 虚拟DOM\n     let watcher = new Watcher(vm, updateComponent, true)\n\n    console.log(watcher, 'watcher')\n    //2. 根据虚拟DOM产生真实DOM\n\n    //3. 插入到el元素中\n}\nfunction createElm(vnode) {\n    let { tag, props, children, text } = vnode\n    if(typeof tag === 'string'){\n        vnode.el = document.createElement(tag)\n        genProps(vnode.el, props)\n        children.forEach(child => {\n            vnode.el.appendChild(createElm(child))\n        })\n    }else {\n        //tag 是undefined 文本节点\n        vnode.el = document.createTextNode(text)\n    }\n    return vnode.el\n}\n\nfunction genProps(el, props) {\n    // style: { color: 'red', backgroundColor: yellow }\n    for (const key in props) {\n        if(key === 'style'){\n            for(const styleName in props[key]){\n                el[styleName] = props[key][styleName]\n            }\n        }else{\n            el.setAttribute(key, props[key])\n        }\n    }\n}\n\nexport function patch(oldNode, vnode) {\n    const isRealElement = oldNode.nodeType\n    if(isRealElement){\n        const elm = oldNode //获取真实元素\n\n        const parentElm = elm.parentNode\n        let newElm = createElm(vnode)\n        //删除旧节点 插入新节点\n        parentElm.insertBefore(newElm, oldNode.nextSibling)\n        parentElm.removeChild(elm)\n\n        return newElm\n    }else{\n        //diff算法\n    }\n\n}\n\n// vue核心流程 1） 创造了响应式数据  2） 模板转换成ast语法树\n// 3) 将ast语法树转换了render函数 4) 后续每次数据更新可以只执行render函数 (无需再次执行ast转化的过程)\n// render函数会去产生虚拟节点（使用响应式数据）\n// 根据生成的虚拟节点创造真实的DOM\n\n// 执行具体的某一个生命周期\nexport function callHook(vm, hook) {\n    const handlers = vm.$options[hook]\n\n    if(handlers){\n        handlers.forEach(handler => handler.call(vm))\n    }\n}","let strats = {}\nlet lifeCycleArr = [\n    'beforeCreate',\n    'created',\n    'beforeMount',\n    'mounted',\n    'beforeUpdate',\n    'updated',\n    'beforeDestroy',\n    'destroyed',\n    'activated',\n    'deactivated',\n    'errorCaptured',\n    'serverPrefetch'\n]\n\nlifeCycleArr.forEach(cycle => {\n    strats[cycle] = (parentVal, childVal) => {\n        if(childVal){\n            if(parentVal){\n                return parentVal.concat(childVal)\n            }else{\n                return [childVal]\n            }\n        }else {\n            return parentVal\n        }\n    }\n})\n\nexport function mergeOptions(parent, child) {\n    const options = {}\n\n    for(let key in parent){\n        mergeFields(key)\n    }\n\n    for(let key in child){\n        // 合并父亲中不出现的属性\n        if(!parent.hasOwnProperty(key)){\n            mergeFields(key)\n        }\n    }\n\n    function mergeFields(key) {\n        // 策略模式\n        if(strats[key]){\n            options[key] = strats[key](parent[key], child[key])\n        }else {\n            //默认合并\n            // 优先合并儿子的属性\n            options[key] = child[key] || parent[key]\n        }\n    }\n\n\n    return options\n}","\nimport Vue from \"./index\";\nimport { initState } from \"./state\";\nimport { compileToFunction } from \"./compiler\";\nimport { callHook, mountComponent } from \"./lifecycle\";\nimport { mergeOptions } from \"./utils\";\n\n//扩展vue的初始化\nexport const initMixin = function (Vue){\n    //用于初始化操作\n    Vue.prototype._init = function (options){\n        const vm = this\n\n        //用户定义的全局指令、过滤器 都会挂载到实例上\n        vm.$options = mergeOptions(this.constructor.options, options)\n\n        callHook(vm, 'beforeCreate')\n        //初始化状态\n        initState(vm)\n        callHook(vm, 'created')\n\n        if(options.el){\n            vm.$mount(options.el)\n        }\n    }\n    //挂载操作\n    Vue.prototype.$mount = function (el){\n        const vm = this\n        let ops = vm.$options\n        el = document.querySelector(el)\n        if(!ops.render){\n            let template\n            if(!ops.template && el){    //没写template 但是写了el\n                template = el.outerHTML\n            }else{\n                // 有template 就用template\n                if(el)  template = ops.template\n            }\n            if(template){\n                //对模板进行编辑\n                const render = compileToFunction(template)\n                ops.render = render\n            }\n        }\n\n        //挂载组件\n        mountComponent(vm, el)\n    }\n}\n\n","import { mergeOptions } from \"./utils\";\n\n\nexport function initGloablAPI(Vue) {\n    Vue.options = {}\n    Vue.mixin = function (mixin){\n        this.options = mergeOptions(this.options, mixin)\n        return this\n    }\n}","import { initMixin } from \"./init\";\nimport { initLifeCycle } from \"./lifecycle\";\nimport { nextTick } from \"./observe/watcher\";\nimport { initGloablAPI } from \"./globalAPI\";\n\nfunction Vue(options){\n    this._init(options)\n}\n\nVue.prototype.$nextTick = nextTick\ninitMixin(Vue)\ninitLifeCycle(Vue)\ninitGloablAPI(Vue)\n\nexport default Vue"],"names":["oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","ob","__ob__","args","result","call","inserted","arr","slice","observeArray","dep","notify","id","Dep","subs","target","addDep","watcher","push","update","Observer","data","defineProperty","value","enumerable","isArray","__proto__","walk","item","observe","keys","key","defineReactive","dependArray","i","length","cur","depend","childOB","get","set","newValue","initState","vm","ops","$options","initData","proxy","_data","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","parent","start","node","char","text","replace","end","pop","advance","n","substring","parseStartag","match","tagName","attr","endMatch","name","textEnd","indexOf","startTagMatch","endTagName","genprops","str","obj","split","trim","JSON","stringify","genChildren","map","child","gen","join","defaultTagRE","codegen","test","tokens","lastIndex","exec","index","ast","code","compileToFunction","template","render","Function","createElementVnode","vnode","createTextVnode","undefined","props","Watcher","fn","options","getter","renderWatcher","deps","depsIDSet","Set","has","add","addWat","queueWatcher","console","log","queue","flag","flushSchedulerQueue","flushQueue","run","nextTick","callbacks","waiting","flushCallbacks","cbs","cb","timerFunc","Promise","resolve","then","MutationObserver","observer","textNode","document","createTextNode","characterData","textContent","setImmediate","setTimeout","initLifeCycle","Vue","_update","el","$el","patch","_c","arguments","_s","_v","_render","mountComponent","updateComponent","createElm","createElement","genProps","appendChild","styleName","setAttribute","oldNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","callHook","hook","handlers","handler","strats","lifeCycleArr","cycle","parentVal","childVal","concat","mergeOptions","mergeFields","hasOwnProperty","initMixin","_init","constructor","$mount","querySelector","outerHTML","initGloablAPI","mixin","$nextTick"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EACA,IAAIA,aAAa,GAAGC,KAAK,CAACC,SAAS,CAAA;EAE5B,IAAMC,aAAa,GAAGC,MAAM,CAACC,MAAM,CAACL,aAAa,CAAC,CAAA;EAEzD,IAAIM,OAAO,GAAG,CACV,MAAM,EACN,KAAK,EACL,OAAO,EACP,SAAS,EACT,SAAS,EACT,QAAQ,EACR,MAAM,CACT,CAAA;EAEDA,OAAO,CAACC,OAAO,CAAC,UAAAC,MAAM,EAAG;EACrBL,EAAAA,aAAa,CAACK,MAAM,CAAC,GAAI,YAAkB;EAAA,IAAA,IAAA,qBAAA,CAAA;EACvC,IAAA,IAAIC,EAAE,GAAG,IAAI,CAACC,MAAM,CAAA;EAAA,IAAA,KAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EADcC,IAAI,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;QAAJA,IAAI,CAAA,IAAA,CAAA,GAAA,SAAA,CAAA,IAAA,CAAA,CAAA;EAAA,KAAA;EAEtC,IAAA,IAAMC,MAAM,GAAG,CAAAZ,qBAAAA,GAAAA,aAAa,CAACQ,MAAM,CAAC,EAACK,IAAI,CAAA,KAAA,CAAA,qBAAA,EAAA,CAAC,IAAI,CAAA,CAAA,MAAA,CAAKF,IAAI,CAAC,CAAA,CAAA;EACxD,IAAA,IAAIG,QAAQ,CAAA;EACZ,IAAA,QAAQN,MAAM;EACV,MAAA,KAAK,MAAM,CAAA;EACX,MAAA,KAAK,SAAS;EACVM,QAAAA,QAAQ,GAAGH,IAAI,CAAA;EACf,QAAA,MAAA;EACJ,MAAA,KAAK,QAAQ;EAAG;EACZG,QAAAA,QAAQ,GAAGC,GAAG,CAACC,KAAK,CAAC,CAAC,CAAC,CAAA;EACvB,QAAA,MAAA;EAEK,KAAA;EAEb,IAAA,IAAGF,QAAQ,EAAC;EACR;EACAL,MAAAA,EAAE,CAACQ,YAAY,CAACH,QAAQ,CAAC,CAAA;EAC7B,KAAA;EACAL,IAAAA,EAAE,CAACS,GAAG,CAACC,MAAM,EAAE,CAAA;EACf,IAAA,OAAOP,MAAM,CAAA;KAChB,CAAA;EACL,CAAC,CAAC;;ECtCF,IAAIQ,IAAE,GAAG,CAAC,CAAA;;EAEV;EAAA,IACMC,GAAG,gBAAA,YAAA;IACL,SAAc,GAAA,GAAA;EAAA,IAAA,eAAA,CAAA,IAAA,EAAA,GAAA,CAAA,CAAA;EACV,IAAA,IAAI,CAACD,EAAE,GAAGA,IAAE,EAAE,CAAA;MACd,IAAI,CAACE,IAAI,GAAG,EAAE,CAAA;EAClB,GAAA;EAAC,EAAA,YAAA,CAAA,GAAA,EAAA,CAAA;EAAA,IAAA,GAAA,EAAA,QAAA;EAAA,IAAA,KAAA,EACD,SAAQ,MAAA,GAAA;EACJ;EACAD,MAAAA,GAAG,CAACE,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC,CAAA;EAC3B,KAAA;EAAC,GAAA,EAAA;EAAA,IAAA,GAAA,EAAA,QAAA;MAAA,KACD,EAAA,SAAA,MAAA,CAAOC,OAAO,EAAC;EACX,MAAA,IAAI,CAACH,IAAI,CAACI,IAAI,CAACD,OAAO,CAAC,CAAA;EAC3B,KAAA;EAAC,GAAA,EAAA;EAAA,IAAA,GAAA,EAAA,QAAA;EAAA,IAAA,KAAA,EACD,SAAQ,MAAA,GAAA;EACJ,MAAA,IAAI,CAACH,IAAI,CAACf,OAAO,CAAC,UAAAkB,OAAO,EAAI;UACzBA,OAAO,CAACE,MAAM,EAAE,CAAA;EACpB,OAAC,CAAC,CAAA;EACN,KAAA;EAAC,GAAA,CAAA,CAAA,CAAA;EAAA,EAAA,OAAA,GAAA,CAAA;EAAA,CAAA,EAAA,CAAA;EAELN,GAAG,CAACE,MAAM,GAAG,IAAI;;ECpBO,IAElBK,QAAQ,gBAAA,YAAA;EACV,EAAA,SAAA,QAAA,CAAYC,IAAI,EAAE;EAAA,IAAA,eAAA,CAAA,IAAA,EAAA,QAAA,CAAA,CAAA;EACd,IAAA,IAAI,CAACX,GAAG,GAAG,IAAIG,GAAG,EAAE,CAAA;EACpB;EACAjB,IAAAA,MAAM,CAAC0B,cAAc,CAACD,IAAI,EAAE,QAAQ,EAAC;EACjCE,MAAAA,KAAK,EAAE,IAAI;EACXC,MAAAA,UAAU,EAAE,KAAA;EAChB,KAAC,CAAC,CAAA;EACF;EACA,IAAA,IAAG/B,KAAK,CAACgC,OAAO,CAACJ,IAAI,CAAC,EAAC;QACnBA,IAAI,CAACK,SAAS,GAAI/B,aAAa,CAAA;EAC/B;EACA,MAAA,IAAI,CAACc,YAAY,CAACY,IAAI,CAAC,CAAA;EAC3B,KAAC,MAAI;EACD;EACA,MAAA,IAAI,CAACM,IAAI,CAACN,IAAI,CAAC,CAAA;EACnB,KAAA;EAEJ,GAAA;EAAC,EAAA,YAAA,CAAA,QAAA,EAAA,CAAA;EAAA,IAAA,GAAA,EAAA,cAAA;MAAA,KACD,EAAA,SAAA,YAAA,CAAaA,IAAI,EAAC;EACd;EACAA,MAAAA,IAAI,CAACtB,OAAO,CAAC,UAAA6B,IAAI,EAAA;UAAA,OAAIC,OAAO,CAACD,IAAI,CAAC,CAAA;SAAC,CAAA,CAAA;EACvC,KAAA;EAAC,GAAA,EAAA;EAAA,IAAA,GAAA,EAAA,MAAA;MAAA,KACD,EAAA,SAAA,IAAA,CAAKP,IAAI,EAAC;QACNzB,MAAM,CAACkC,IAAI,CAACT,IAAI,CAAC,CAACtB,OAAO,CAAC,UAAAgC,GAAG,EAAA;UAAA,OAAIC,cAAc,CAACX,IAAI,EAACU,GAAG,EAACV,IAAI,CAACU,GAAG,CAAC,CAAC,CAAA;SAAC,CAAA,CAAA;EACxE,KAAA;EAAC,GAAA,CAAA,CAAA,CAAA;EAAA,EAAA,OAAA,QAAA,CAAA;EAAA,CAEL,EAAA,CAAA;EACA,SAASE,WAAW,CAACV,KAAK,EAAE;EACxB,EAAA,KAAI,IAAIW,CAAC,GAAE,CAAC,EAACA,CAAC,GAAEX,KAAK,CAACY,MAAM,EAAED,CAAC,EAAE,EAAC;EAC9B,IAAA,IAAIE,GAAG,GAAGb,KAAK,CAACW,CAAC,CAAC,CAAA;MAClBE,GAAG,CAAClC,MAAM,IAAIkC,GAAG,CAAClC,MAAM,CAACQ,GAAG,CAAC2B,MAAM,EAAE,CAAA;EACrC,IAAA,IAAG5C,KAAK,CAACgC,OAAO,CAACW,GAAG,CAAC,EAAC;QAClBH,WAAW,CAACG,GAAG,CAAC,CAAA;EACpB,KAAA;EACJ,GAAA;EACJ,CAAA;EAEO,SAASJ,cAAc,CAACjB,MAAM,EAACgB,GAAG,EAAER,KAAK,EAAE;EAC9C;EACA,EAAA,IAAIe,OAAO,GAAGT,OAAO,CAACN,KAAK,CAAC,CAAA;EAC5B,EAAA,IAAIb,GAAG,GAAG,IAAIG,GAAG,EAAE,CAAK;EACxBjB,EAAAA,MAAM,CAAC0B,cAAc,CAACP,MAAM,EAAEgB,GAAG,EAAC;EAC9BQ,IAAAA,GAAG,EAAE,SAAA,GAAA,GAAA;QACD,IAAG1B,GAAG,CAACE,MAAM,EAAC;UACVL,GAAG,CAAC2B,MAAM,EAAE,CAAA;EACZ,QAAA,IAAGC,OAAO,EAAC;EACPA,UAAAA,OAAO,CAAC5B,GAAG,CAAC2B,MAAM,EAAE,CAAA;EACpB,UAAA,IAAG5C,KAAK,CAACgC,OAAO,CAACF,KAAK,CAAC,EAAC;cACpBU,WAAW,CAACV,KAAK,CAAC,CAAA;EACtB,WAAA;EAEJ,SAAA;EACJ,OAAA;EACA,MAAA,OAAOA,KAAK,CAAA;OACf;MACDiB,GAAG,EAAA,SAAA,GAAA,CAACC,QAAQ,EAAC;QACT,IAAGA,QAAQ,KAAKlB,KAAK,EAAG,OAAA;QACxBM,OAAO,CAACY,QAAQ,CAAC,CAAA;EACjBlB,MAAAA,KAAK,GAAGkB,QAAQ,CAAA;EAChB;QACA/B,GAAG,CAACC,MAAM,EAAE,CAAA;EAChB,KAAA;EACJ,GAAC,CAAC,CAAA;EACN,CAAA;EACO,SAASkB,OAAO,CAACR,IAAI,EAAE;EAC1B;IACA,IAAG,OAAA,CAAOA,IAAI,CAAK,KAAA,QAAQ,IAAIA,IAAI,KAAK,IAAI,EAAE,OAAA;EAC9C,EAAA,IAAGA,IAAI,CAACnB,MAAM,YAAYkB,QAAQ,EAAE,OAAM;EAC1C,EAAA,OAAO,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAA;EAC7B;;ECzEA;EAGO,SAASqB,SAAS,CAACC,EAAE,EAAE;EAC1B,EAAA,IAAMC,GAAG,GAAGD,EAAE,CAACE,QAAQ,CAAA;IACvB,IAAGD,GAAG,CAACvB,IAAI,EAAC;MACRyB,QAAQ,CAACH,EAAE,CAAC,CAAA;EAChB,GAAA;EACJ,CAAA;EAEA,SAASI,KAAK,CAACJ,EAAE,EAAE5B,MAAM,EAAEgB,GAAG,EAAE;EAC5BnC,EAAAA,MAAM,CAAC0B,cAAc,CAACqB,EAAE,EAACZ,GAAG,EAAE;EAC1BQ,IAAAA,GAAG,EAAE,SAAA,GAAA,GAAA;EACD,MAAA,OAAOI,EAAE,CAAC5B,MAAM,CAAC,CAACgB,GAAG,CAAC,CAAA;OACzB;MACDS,GAAG,EAAA,SAAA,GAAA,CAACC,QAAQ,EAAC;EACTE,MAAAA,EAAE,CAAC5B,MAAM,CAAC,CAACgB,GAAG,CAAC,GAAGU,QAAQ,CAAA;EAC9B,KAAA;EACJ,GAAC,CAAC,CAAA;EACN,CAAA;EAEA,SAASK,QAAQ,CAACH,EAAE,EAAC;EAEjB,EAAA,IAAItB,IAAI,GAAGsB,EAAE,CAACE,QAAQ,CAACxB,IAAI,CAAK;;EAEhCA,EAAAA,IAAI,GAAG,OAAOA,IAAI,KAAK,UAAU,GAAGA,IAAI,CAAChB,IAAI,CAACsC,EAAE,CAAC,GAAGtB,IAAI,CAAA;IAExDsB,EAAE,CAACK,KAAK,GAAG3B,IAAI,CAAA;;EAEf;IACAQ,OAAO,CAACR,IAAI,CAAC,CAAA;;EAEb;EACA,EAAA,KAAI,IAAIU,GAAG,IAAIV,IAAI,EAAC;EAChB0B,IAAAA,KAAK,CAACJ,EAAE,EAAC,OAAO,EAAEZ,GAAG,CAAC,CAAA;EAC1B,GAAA;EACJ;;ECpCA,IAAMkB,MAAM,GAAiC,8BAAA,CAAA;EAC7C,IAAMC,YAAY,GAAA,MAAA,CAAA,MAAA,CAAUD,MAAM,EAAA,OAAA,CAAA,CAAA,MAAA,CAAQA,MAAM,EAAG,GAAA,CAAA,CAAA;EACnD,IAAME,YAAY,GAAG,IAAIC,MAAM,aAAMF,YAAY,CAAA,CAAG,CAAC;EACrD,IAAMG,MAAM,GAAG,IAAID,MAAM,gBAASF,YAAY,EAAA,QAAA,CAAA,CAAS,CAAC;EACxD,IAAMI,SAAS,GAAG,2EAA2E,CAAC;EAC9F;EACA,IAAMC,aAAa,GAAG,YAAY,CAAC;;EAE5B,SAASC,SAAS,CAACC,IAAI,EAAE;IAE5B,IAAMC,YAAY,GAAG,CAAC,CAAE;IACxB,IAAMC,SAAS,GAAG,CAAC,CAAK;IACxB,IAAMC,KAAK,GAAG,EAAE,CAAA;EAChB,EAAA,IAAIC,aAAa,CAAG;EACpB,EAAA,IAAIC,IAAI,CAAA;;EAER;EACA,EAAA,SAASC,gBAAgB,CAACC,GAAG,EAAEC,KAAK,EAAE;MAClC,OAAO;EACHD,MAAAA,GAAG,EAAHA,GAAG;EACHE,MAAAA,IAAI,EAAER,YAAY;EAClBS,MAAAA,QAAQ,EAAE,EAAE;EACZF,MAAAA,KAAK,EAALA,KAAK;EACLG,MAAAA,MAAM,EAAE,IAAA;OACX,CAAA;EACL,GAAA;EAEA,EAAA,SAASC,KAAK,CAACL,GAAG,EAAEC,KAAK,EAAE;EACvB,IAAA,IAAIK,IAAI,GAAGP,gBAAgB,CAACC,GAAG,EAAEC,KAAK,CAAC,CAAA;MACvC,IAAG,CAACH,IAAI,EAAC;EAAG;EACRA,MAAAA,IAAI,GAAGQ,IAAI,CAAA;EACf,KAAA;EACA,IAAA,IAAGT,aAAa,EAAC;QACbS,IAAI,CAACF,MAAM,GAAGP,aAAa,CAAA;EAC3B;EACAA,MAAAA,aAAa,CAACM,QAAQ,CAACjD,IAAI,CAACoD,IAAI,CAAC,CAAA;EACrC,KAAA;EACAV,IAAAA,KAAK,CAAC1C,IAAI,CAACoD,IAAI,CAAC,CAAA;MAChBT,aAAa,GAAGS,IAAI,CAAI;EAC5B,GAAA;;IACA,SAASC,KAAI,CAACC,IAAI,EAAE;EAChB;MACAA,IAAI,GAAGA,IAAI,CAACC,OAAO,CAAC,KAAK,EAAC,GAAG,CAAC,CAAA;EAC9BD,IAAAA,IAAI,IAAIX,aAAa,CAACM,QAAQ,CAACjD,IAAI,CAAC;EAChCgD,MAAAA,IAAI,EAAEP,SAAS;EACfa,MAAAA,IAAI,EAAJA,IAAI;EACJJ,MAAAA,MAAM,EAAEP,aAAAA;EACZ,KAAC,CAAC,CAAA;EACN,GAAA;IAEA,SAASa,GAAG,CAACV,GAAG,EAAE;EACd,IAAWJ,KAAK,CAACe,GAAG,GAAI;MACxBd,aAAa,GAAGD,KAAK,CAACA,KAAK,CAACzB,MAAM,GAAG,CAAC,CAAC,CAAA;EAC3C,GAAA;IAEA,SAASyC,OAAO,CAACC,CAAC,EAAE;EAChBpB,IAAAA,IAAI,GAAGA,IAAI,CAACqB,SAAS,CAACD,CAAC,CAAC,CAAA;EAC5B,GAAA;EACA,EAAA,SAASE,YAAY,GAAE;EACnB,IAAA,IAAMV,KAAK,GAAGZ,IAAI,CAACuB,KAAK,CAAC7B,YAAY,CAAC,CAAA;EACtC,IAAA,IAAGkB,KAAK,EAAC;EACL,MAAA,IAAIW,KAAK,GAAG;EACRC,QAAAA,OAAO,EAAEZ,KAAK,CAAC,CAAC,CAAC;EACjBJ,QAAAA,KAAK,EAAE,EAAA;SACV,CAAA;EACDW,MAAAA,OAAO,CAACP,KAAK,CAAC,CAAC,CAAC,CAAClC,MAAM,CAAC,CAAA;QACxB,IAAI+C,IAAI,EAAEC,QAAQ,CAAA;QAClB,OAAM,EAAEA,QAAQ,GAAG1B,IAAI,CAACuB,KAAK,CAACzB,aAAa,CAAC,CAAC,KAAK2B,IAAI,GAAGzB,IAAI,CAACuB,KAAK,CAAC1B,SAAS,CAAC,CAAC,EAAC;EAC5EsB,QAAAA,OAAO,CAACM,IAAI,CAAC,CAAC,CAAC,CAAC/C,MAAM,CAAC,CAAA;EACvB6C,QAAAA,KAAK,CAACf,KAAK,CAAC/C,IAAI,CAAC;EAACkE,UAAAA,IAAI,EAAEF,IAAI,CAAC,CAAC,CAAC;EAAE3D,UAAAA,KAAK,EAAE2D,IAAI,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAA;EAAC,SAAC,CAAC,CAAA;EAC3E,OAAA;EACA,MAAA,IAAGC,QAAQ,EAAC;EACRP,QAAAA,OAAO,CAACO,QAAQ,CAAC,CAAC,CAAC,CAAChD,MAAM,CAAC,CAAA;EAC/B,OAAA;EACA,MAAA,OAAO6C,KAAK,CAAA;EAChB,KAAA;EACA;;EAEA,IAAA,OAAO,KAAK,CAAA;EAChB,GAAA;EAEA,EAAA,OAAMvB,IAAI,EAAC;MACP,IAAI4B,OAAO,GAAG5B,IAAI,CAAC6B,OAAO,CAAC,GAAG,CAAC,CAAG;MAClC,IAAGD,OAAO,KAAK,CAAC,EAAC;QACb,IAAME,aAAa,GAAGR,YAAY,EAAE,CAAA;EACpC,MAAA,IAAGQ,aAAa,EAAC;UACblB,KAAK,CAACkB,aAAa,CAACN,OAAO,EAAEM,aAAa,CAACtB,KAAK,CAAC,CAAA;EACjD,QAAA,SAAA;EACJ,OAAA;EACA,MAAA,IAAIuB,UAAU,GAAG/B,IAAI,CAACuB,KAAK,CAAC3B,MAAM,CAAC,CAAA;EACnC,MAAA,IAAGmC,UAAU,EAAC;EACVZ,QAAAA,OAAO,CAACY,UAAU,CAAC,CAAC,CAAC,CAACrD,MAAM,CAAC,CAAA;EAC7BuC,QAAAA,GAAG,CAACc,UAAU,CAAC,CAAC,CAAC,CAAC,CAAA;EAClB,QAAA,SAAA;EACJ,OAAA;EACA,MAAA,MAAA;EACJ,KAAA;MACA,IAAGH,OAAO,GAAG,CAAC,EAAC;QACX,IAAIb,IAAI,GAAGf,IAAI,CAACqB,SAAS,CAAC,CAAC,EAAEO,OAAO,CAAC,CAAA;EACrC,MAAA,IAAGb,IAAI,EAAC;UACJD,KAAI,CAACC,IAAI,CAAC,CAAA;EACVI,QAAAA,OAAO,CAACJ,IAAI,CAACrC,MAAM,CAAC,CAAA;EACxB,OAAA;EACJ,KAAA;EACJ,GAAA;EACA,EAAA,OAAO2B,IAAI,CAAA;EACf;;ECxGA;EACA,SAAS2B,QAAQ,CAACxB,KAAK,EAAE;IACrB,IAAIyB,GAAG,GAAG,EAAE,CAAA;IAAA,IACqB,KAAA,GAAA,SAAA,KAAA,GAAA;MAC7B,IAAGzB,KAAK,CAAC/B,CAAC,CAAC,CAACkD,IAAI,KAAK,OAAO,EAAC;QACzB,IAAIO,GAAG,GAAG,EAAE,CAAA;EACZ1B,MAAAA,KAAK,CAAC/B,CAAC,CAAC,CAACX,KAAK,CAACqE,KAAK,CAAC,GAAG,CAAC,CAAC7F,OAAO,CAAC,UAAA6B,IAAI,EAAG;EACrC,QAAA,IAAA,WAAA,GAAmBA,IAAI,CAACgE,KAAK,CAAC,GAAG,CAAC;EAAA,UAAA,YAAA,GAAA,cAAA,CAAA,WAAA,EAAA,CAAA,CAAA;YAA7B7D,GAAG,GAAA,YAAA,CAAA,CAAA,CAAA;YAAER,KAAK,GAAA,YAAA,CAAA,CAAA,CAAA,CAAA;EACfQ,QAAAA,GAAG,GAAGA,GAAG,CAAC8D,IAAI,EAAE,CAAA;EAChBtE,QAAAA,KAAK,GAAGA,KAAK,CAACsE,IAAI,EAAE,CAAA;EACpBF,QAAAA,GAAG,CAAC5D,GAAG,CAAC,GAAGR,KAAK,CAAA;EACpB,OAAC,CAAC,CAAA;EACF0C,MAAAA,KAAK,CAAC/B,CAAC,CAAC,CAACX,KAAK,GAAGoE,GAAG,CAAA;EACxB,KAAA;EACAD,IAAAA,GAAG,cAAOzB,KAAK,CAAC/B,CAAC,CAAC,CAACkD,IAAI,EAAIU,GAAAA,CAAAA,CAAAA,MAAAA,CAAAA,IAAI,CAACC,SAAS,CAAC9B,KAAK,CAAC/B,CAAC,CAAC,CAACX,KAAK,CAAC,EAAI,GAAA,CAAA,CAAA;KAChE,CAAA;EAZD,EAAA,KAAI,IAAIW,CAAC,GAAE,CAAC,EAACA,CAAC,GAAC+B,KAAK,CAAC9B,MAAM,EAAED,CAAC,EAAE,EAAA;EAAA,IAAA,KAAA,EAAA,CAAA;EAAA,GAAA;EAahC;IACA,OAAWwD,GAAAA,CAAAA,MAAAA,CAAAA,GAAG,CAAClF,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,EAAA,GAAA,CAAA,CAAA;EAC9B,CAAA;;EAEA;EACA,SAASwF,WAAW,CAAC7B,QAAQ,EAAE;EAC3B,EAAA,OAAOA,QAAQ,CAAC8B,GAAG,CAAC,UAAAC,KAAK,EAAA;MAAA,OAAIC,GAAG,CAACD,KAAK,CAAC,CAAA;EAAA,GAAA,CAAC,CAACE,IAAI,CAAC,GAAG,CAAC,CAAA;EACtD,CAAA;EACA,IAAMC,YAAY,GAAG,0BAA0B,CAAC;EAChD,SAASF,GAAG,CAAC7B,IAAI,EAAE;EACf,EAAA,IAAGA,IAAI,CAACJ,IAAI,KAAK,CAAC,EAAC;MACf,OAAOoC,OAAO,CAAChC,IAAI,CAAC,CAAA;EACxB,GAAC,MAAI;EACD;EACC,IAAA,IAAIE,IAAI,GAAGF,IAAI,CAACE,IAAI,CAAA;EACpB,IAAA,IAAG,CAAC6B,YAAY,CAACE,IAAI,CAAC/B,IAAI,CAAC,EAAC;EACxB,MAAA,OAAA,KAAA,CAAA,MAAA,CAAasB,IAAI,CAACC,SAAS,CAACvB,IAAI,CAAC,EAAA,GAAA,CAAA,CAAA;EACrC,KAAC,MAAI;EACD;QACA,IAAIgC,MAAM,GAAG,EAAE,CAAA;EACf,MAAA,IAAIxB,KAAK,CAAA;EACT;QACAqB,YAAY,CAACI,SAAS,GAAG,CAAC,CAAA;QAC1B,IAAIA,SAAS,GAAG,CAAC,CAAA;QACjB,OAAMzB,KAAK,GAAGqB,YAAY,CAACK,IAAI,CAAClC,IAAI,CAAC,EAAC;EAAS;EAC3C;EACA,QAAA,IAAImC,KAAK,GAAG3B,KAAK,CAAC2B,KAAK,CAAA;UACvB,IAAGA,KAAK,GAAGF,SAAS,EAAC;EACjBD,UAAAA,MAAM,CAACtF,IAAI,CAAC4E,IAAI,CAACC,SAAS,CAACvB,IAAI,CAAChE,KAAK,CAACiG,SAAS,EAAEE,KAAK,CAAC,CAAC,CAAC,CAAA;EAC7D,SAAA;UACAH,MAAM,CAACtF,IAAI,CAAA,KAAA,CAAA,MAAA,CAAO8D,KAAK,CAAC,CAAC,CAAC,CAACa,IAAI,EAAE,EAAI,GAAA,CAAA,CAAA,CAAA;UACrCY,SAAS,GAAGE,KAAK,GAAG3B,KAAK,CAAC,CAAC,CAAC,CAAC7C,MAAM,CAAA;EAEvC,OAAA;EACA;EACA,MAAA,IAAGsE,SAAS,GAAGjC,IAAI,CAACrC,MAAM,EAAC;EACvBqE,QAAAA,MAAM,CAACtF,IAAI,CAAC4E,IAAI,CAACC,SAAS,CAACvB,IAAI,CAAChE,KAAK,CAACiG,SAAS,CAAC,CAAC,CAAC,CAAA;EACtD,OAAA;EACA,MAAA,OAAA,KAAA,CAAA,MAAA,CAAaD,MAAM,CAACJ,IAAI,CAAC,GAAG,CAAC,EAAA,GAAA,CAAA,CAAA;EACjC,KAAA;EACL,GAAA;EACJ,CAAA;;EAEA;EACA,SAASE,OAAO,CAACM,GAAG,EAAE;EAElB,EAAA,IAAMzC,QAAQ,GAAG6B,WAAW,CAACY,GAAG,CAACzC,QAAQ,CAAC,CAAA;EAC1C,EAAA,IAAM0C,IAAI,GAAA,MAAA,CAAA,MAAA,CAAWD,GAAG,CAAC5C,GAAG,EAAA,IAAA,CAAA,CAAA,MAAA,CAAK4C,GAAG,CAAC3C,KAAK,CAAC9B,MAAM,GAAGsD,QAAQ,CAACmB,GAAG,CAAC3C,KAAK,CAAC,GAAG,MAAM,EAAA,QAAA,CAAA,CAAA,MAAA,CAC9E2C,GAAG,CAACzC,QAAQ,CAAChC,MAAM,GAAA,GAAA,CAAA,MAAA,CAAOgC,QAAQ,CAAA,GAAK,EAAE,EACxC,SAAA,CAAA,CAAA;EAEH,EAAA,OAAO0C,IAAI,CAAA;EACf,CAAA;EACA;EACO,SAASC,iBAAiB,CAACC,QAAQ,EAAE;EACxC;EACA,EAAA,IAAIH,GAAG,GAAGpD,SAAS,CAACuD,QAAQ,CAAC,CAAA;;EAE7B;EACA,EAAA,IAAIF,IAAI,GAAGP,OAAO,CAACM,GAAG,CAAC,CAAA;;EAEvB;IACAC,IAAI,GAAA,oBAAA,CAAA,MAAA,CAAwBA,IAAI,EAAG,GAAA,CAAA,CAAA;EAEnC,EAAA,IAAIG,MAAM,GAAG,IAAIC,QAAQ,CAACJ,IAAI,CAAC,CAAA;EAC/B,EAAA,OAAOG,MAAM,CAAA;EAEjB;;ECrFO,SAASE,kBAAkB,CAACvE,EAAE,EAAEqB,GAAG,EAAE3C,IAAI,EAAe;IAC3D,IAAIU,GAAG,GAAGV,IAAI,KAAA,IAAA,IAAJA,IAAI,KAAJA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,IAAI,CAAEU,GAAG,CAAA;EACnBA,EAAAA,GAAG,GAAG,OAAOV,IAAI,CAACU,GAAG,GAAG,EAAE,CAAA;EAAA,EAAA,KAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAFuBoC,QAAQ,GAAA,IAAA,KAAA,CAAA,IAAA,GAAA,CAAA,GAAA,IAAA,GAAA,CAAA,GAAA,CAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;MAARA,QAAQ,CAAA,IAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA,IAAA,CAAA,CAAA;EAAA,GAAA;IAGzD,OAAOgD,KAAK,CAACxE,EAAE,EAACqB,GAAG,EAACjC,GAAG,EAAEV,IAAI,EAAE8C,QAAQ,CAAC,CAAA;EAC5C,CAAA;EAEO,SAASiD,eAAe,CAACzE,EAAE,EAAE6B,IAAI,EAAE;EACtC,EAAA,OAAO2C,KAAK,CAACxE,EAAE,EAAE0E,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAE7C,IAAI,CAAC,CAAA;EACtE,CAAA;EACA;EACA;EACA;EACA,SAAS2C,KAAK,CAACxE,EAAE,EAAEqB,GAAG,EAAEjC,GAAG,EAAEuF,KAAK,EAAEnD,QAAQ,EAAEK,IAAI,EAAE;IAChD,OAAO;EACH7B,IAAAA,EAAE,EAAFA,EAAE;EACFqB,IAAAA,GAAG,EAAHA,GAAG;EACHjC,IAAAA,GAAG,EAAHA,GAAG;EACHuF,IAAAA,KAAK,EAALA,KAAK;EACLnD,IAAAA,QAAQ,EAARA,QAAQ;EACRK,IAAAA,IAAI,EAAJA,IAAAA;KACH,CAAA;EACL;;ECnBA,IAAI5D,EAAE,GAAG,CAAC,CAAA;EAAA,IAEJ2G,OAAO,gBAAA,YAAA;EACT;EACA,EAAA,SAAA,OAAA,CAAY5E,EAAE,EAAE6E,EAAE,EAAEC,OAAO,EAAE;EAAA,IAAA,eAAA,CAAA,IAAA,EAAA,OAAA,CAAA,CAAA;EACzB,IAAA,IAAI,CAAC7G,EAAE,GAAGA,EAAE,EAAE,CAAA;MACd,IAAI,CAAC8G,MAAM,GAAGF,EAAE,CAAA;MAChB,IAAI,CAACG,aAAa,GAAGF,OAAO,CAAA;EAC5B,IAAA,IAAI,CAACG,IAAI,GAAG,EAAE,CAAE;EAChB,IAAA,IAAI,CAACC,SAAS,GAAG,IAAIC,GAAG,EAAE,CAAA;MAC1B,IAAI,CAACvF,GAAG,EAAE,CAAA;EACd,GAAA;EAAC,EAAA,YAAA,CAAA,OAAA,EAAA,CAAA;EAAA,IAAA,GAAA,EAAA,KAAA;EAAA,IAAA,KAAA,EAED,SAAM,GAAA,GAAA;EACF1B,MAAAA,GAAG,CAACE,MAAM,GAAG,IAAI,CAAG;QACpB,IAAI,CAAC2G,MAAM,EAAE,CAAA;QACb7G,GAAG,CAACE,MAAM,GAAG,IAAI,CAAA;EACrB,KAAA;EAAC,GAAA,EAAA;EAAA,IAAA,GAAA,EAAA,QAAA;MAAA,KAED,EAAA,SAAA,MAAA,CAAOL,GAAG,EAAE;QACR,IAAI,CAAC,IAAI,CAACmH,SAAS,CAACE,GAAG,CAACrH,GAAG,CAACE,EAAE,CAAC,EAAE;EAC7B,QAAA,IAAI,CAACgH,IAAI,CAAC1G,IAAI,CAACR,GAAG,CAAC,CAAA;UACnB,IAAI,CAACmH,SAAS,CAACG,GAAG,CAACtH,GAAG,CAACE,EAAE,CAAC,CAAA;EAC1BF,QAAAA,GAAG,CAACuH,MAAM,CAAC,IAAI,CAAC,CAAA;EACpB,OAAA;EACJ,KAAA;EAAC,GAAA,EAAA;EAAA,IAAA,GAAA,EAAA,QAAA;EAAA,IAAA,KAAA,EAED,SAAS,MAAA,GAAA;EACL;QACAC,YAAY,CAAC,IAAI,CAAC,CAAE;EACxB,KAAA;EAAC,GAAA,EAAA;EAAA,IAAA,GAAA,EAAA,KAAA;EAAA,IAAA,KAAA,EAED,SAAM,GAAA,GAAA;EACFC,MAAAA,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC,CAAA;QAClB,IAAI,CAAC7F,GAAG,EAAE,CAAA;EACd,KAAA;EAAC,GAAA,CAAA,CAAA,CAAA;EAAA,EAAA,OAAA,OAAA,CAAA;EAAA,CAAA,EAAA,CAAA;EAIL,IAAI8F,KAAK,GAAG,EAAE,CAAA;EACd,IAAIN,GAAG,GAAG,EAAE,CAAA;EACZ,IAAIO,IAAI,GAAG,KAAK,CAAA;EAEhB,SAASC,mBAAmB,GAAG;EAC3B,EAAA,IAAIC,UAAU,GAAGH,KAAK,CAAC7H,KAAK,CAAC,CAAC,CAAC,CAAA;EAC/B6H,EAAAA,KAAK,GAAG,EAAE,CAAA;IACVN,GAAG,GAAG,EAAE,CAAA;EACRO,EAAAA,IAAI,GAAG,KAAK,CAAA;EACZE,EAAAA,UAAU,CAACzI,OAAO,CAAC,UAAA6B,IAAI,EAAA;MAAA,OAAIA,IAAI,CAAC6G,GAAG,EAAE,CAAA;EAAA,GAAA,CAAC,CAAM;EAChD,CAAA;;EAEA,SAASP,YAAY,CAACjH,OAAO,EAAE;EAC3B,EAAA,IAAIL,EAAE,GAAGK,OAAO,CAACL,EAAE,CAAA;EACnB,EAAA,IAAI,CAACmH,GAAG,CAACnH,EAAE,CAAC,EAAE;EACV;EACAyH,IAAAA,KAAK,CAACnH,IAAI,CAACD,OAAO,CAAC,CAAA;EACnB8G,IAAAA,GAAG,CAACnH,EAAE,CAAC,GAAG,IAAI,CAAA;MAEd,IAAI,CAAC0H,IAAI,EAAE;EACPI,MAAAA,QAAQ,CAACH,mBAAsB,CAAC,CAAA;EAChCD,MAAAA,IAAI,GAAG,IAAI,CAAA;EACf,KAAA;EACJ,GAAA;EACJ,CAAA;EAEA,IAAIK,SAAS,GAAG,EAAE,CAAA;EAClB,IAAIC,OAAO,GAAG,KAAK,CAAA;EAEnB,SAASC,cAAc,GAAG;EACtB,EAAA,IAAIC,GAAG,GAAGH,SAAS,CAACnI,KAAK,CAAC,CAAC,CAAC,CAAA;EAC5BmI,EAAAA,SAAS,GAAG,EAAE,CAAA;EACdC,EAAAA,OAAO,GAAG,KAAK,CAAA;EACfE,EAAAA,GAAG,CAAC/I,OAAO,CAAC,UAAAgJ,EAAE,EAAA;EAAA,IAAA,OAAIA,EAAE,EAAE,CAAA;KAAC,CAAA,CAAA;EAC3B,CAAA;EAEA,IAAIC,SAAS,CAAA;EACb,IAAIC,OAAO,EAAE;EACTD,EAAAA,SAAS,GAAG,SAAM,SAAA,GAAA;EACdC,IAAAA,OAAO,CAACC,OAAO,EAAE,CAACC,IAAI,CAACN,cAAc,CAAC,CAAA;KACzC,CAAA;EACL,CAAC,MAAM,IAAIO,gBAAgB,EAAE;EACzB,EAAA,IAAMC,QAAQ,GAAG,IAAID,gBAAgB,CAACP,cAAc,CAAC,CAAA;EACrD,EAAA,IAAIS,QAAQ,GAAGC,QAAQ,CAACC,cAAc,CAAC,CAAC,CAAC,CAAA;EACzCH,EAAAA,QAAQ,CAACxH,OAAO,CAACyH,QAAQ,EAAE;EAACG,IAAAA,aAAa,EAAE,IAAA;EAAI,GAAC,CAAC,CAAA;EAEjDT,EAAAA,SAAS,GAAG,SAAM,SAAA,GAAA;MACdM,QAAQ,CAACI,WAAW,GAAG,CAAC,CAAA;KAC3B,CAAA;EACL,CAAC,MAAM,IAAGC,YAAY,EAAC;EACnBX,EAAAA,SAAS,GAAG,SAAA,SAAA,GAAA;MAAA,OAAMW,YAAY,CAACd,cAAc,CAAC,CAAA;EAAA,GAAA,CAAA;EAClD,CAAC,MAAK;EACFG,EAAAA,SAAS,GAAG,SAAA,SAAA,GAAA;EAAA,IAAA,OAAMY,UAAU,CAACf,cAAc,EAAE,CAAC,CAAC,CAAA;EAAA,GAAA,CAAA;EACnD,CAAA;EAGO,SAASH,QAAQ,CAACK,EAAE,EAAE;EACzBJ,EAAAA,SAAS,CAACzH,IAAI,CAAC6H,EAAE,CAAC,CAAA;IAClB,IAAI,CAACH,OAAO,EAAE;EACVA,IAAAA,OAAO,GAAG,IAAI,CAAA;MACdI,SAAS,CAACH,cAAc,CAAC,CAAA;EAC7B,GAAA;EACJ,CAAA;EAGA;;ECxGO,SAASgB,aAAa,CAACC,GAAG,EAAE;EAC/B;EACAA,EAAAA,GAAG,CAACpK,SAAS,CAACqK,OAAO,GAAG,UAAU5C,KAAK,EAAC;MACpC,IAAMxE,EAAE,GAAG,IAAI,CAAA;EACf,IAAA,IAAMqH,EAAE,GAAGrH,EAAE,CAACsH,GAAG,CAAA;EACjB;MACAtH,EAAE,CAACsH,GAAG,GAAGC,KAAK,CAACF,EAAE,EAAE7C,KAAK,CAAC,CAAA;KAC5B,CAAA;EACD;EACA2C,EAAAA,GAAG,CAACpK,SAAS,CAACyK,EAAE,GAAG,YAAW;EAC1B,IAAA,OAAOjD,kBAAkB,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAC,IAAI,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,IAAA,CAAKkD,SAAS,CAAC,CAAA,CAAA,CAAA;KAChD,CAAA;EACDN,EAAAA,GAAG,CAACpK,SAAS,CAAC2K,EAAE,GAAG,UAAU9I,KAAK,EAAC;EAC/B,IAAA,IAAG,QAAOA,KAAK,CAAA,KAAK,QAAQ,EAAI,OAAOA,KAAK,CAAA;EAC5C,IAAA,OAAOuE,IAAI,CAACC,SAAS,CAACxE,KAAK,CAAC,CAAA;KAC/B,CAAA;EACDuI,EAAAA,GAAG,CAACpK,SAAS,CAAC4K,EAAE,GAAG,YAAW;EAC1B,IAAA,OAAOlD,eAAe,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAC,IAAI,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,IAAA,CAAKgD,SAAS,CAAC,CAAA,CAAA,CAAA;KAC7C,CAAA;EACD;EACAN,EAAAA,GAAG,CAACpK,SAAS,CAAC6K,OAAO,GAAG,YAAW;MAC/B,OAAO,IAAI,CAAC1H,QAAQ,CAACmE,MAAM,CAAC3G,IAAI,CAAC,IAAI,CAAC,CAAA;KACzC,CAAA;EAEL,CAAA;EAEO,SAASmK,cAAc,CAAC7H,EAAE,EAAEqH,EAAE,EAAC;EAClC,EAAA,SAASS,eAAe,GAAG;EACvB9H,IAAAA,EAAE,CAACoH,OAAO,CAACpH,EAAE,CAAC4H,OAAO,EAAE,CAAC,CAAA;EAC5B,GAAA;IACA5H,EAAE,CAACsH,GAAG,GAAGD,EAAE,CAAA;EACX;IACC,IAAI/I,OAAO,GAAG,IAAIsG,OAAO,CAAC5E,EAAE,EAAE8H,eAAe,EAAE,IAAI,CAAC,CAAA;EAErDtC,EAAAA,OAAO,CAACC,GAAG,CAACnH,OAAO,EAAE,SAAS,CAAC,CAAA;EAC/B;;EAEA;EACJ,CAAA;;EACA,SAASyJ,SAAS,CAACvD,KAAK,EAAE;EACtB,EAAA,IAAMnD,GAAG,GAA4BmD,KAAK,CAApCnD,GAAG;MAAEsD,KAAK,GAAqBH,KAAK,CAA/BG,KAAK;MAAEnD,QAAQ,GAAWgD,KAAK,CAAxBhD,QAAQ;MAAEK,IAAI,GAAK2C,KAAK,CAAd3C,IAAI,CAAA;EAChC,EAAA,IAAG,OAAOR,GAAG,KAAK,QAAQ,EAAC;MACvBmD,KAAK,CAAC6C,EAAE,GAAGT,QAAQ,CAACoB,aAAa,CAAC3G,GAAG,CAAC,CAAA;EACtC4G,IAAAA,QAAQ,CAACzD,KAAK,CAAC6C,EAAE,EAAE1C,KAAK,CAAC,CAAA;EACzBnD,IAAAA,QAAQ,CAACpE,OAAO,CAAC,UAAAmG,KAAK,EAAI;QACtBiB,KAAK,CAAC6C,EAAE,CAACa,WAAW,CAACH,SAAS,CAACxE,KAAK,CAAC,CAAC,CAAA;EAC1C,KAAC,CAAC,CAAA;EACN,GAAC,MAAK;EACF;MACAiB,KAAK,CAAC6C,EAAE,GAAGT,QAAQ,CAACC,cAAc,CAAChF,IAAI,CAAC,CAAA;EAC5C,GAAA;IACA,OAAO2C,KAAK,CAAC6C,EAAE,CAAA;EACnB,CAAA;EAEA,SAASY,QAAQ,CAACZ,EAAE,EAAE1C,KAAK,EAAE;EACzB;EACA,EAAA,KAAK,IAAMvF,GAAG,IAAIuF,KAAK,EAAE;MACrB,IAAGvF,GAAG,KAAK,OAAO,EAAC;EACf,MAAA,KAAI,IAAM+I,SAAS,IAAIxD,KAAK,CAACvF,GAAG,CAAC,EAAC;UAC9BiI,EAAE,CAACc,SAAS,CAAC,GAAGxD,KAAK,CAACvF,GAAG,CAAC,CAAC+I,SAAS,CAAC,CAAA;EACzC,OAAA;EACJ,KAAC,MAAI;QACDd,EAAE,CAACe,YAAY,CAAChJ,GAAG,EAAEuF,KAAK,CAACvF,GAAG,CAAC,CAAC,CAAA;EACpC,KAAA;EACJ,GAAA;EACJ,CAAA;EAEO,SAASmI,KAAK,CAACc,OAAO,EAAE7D,KAAK,EAAE;EAClC,EAAA,IAAM8D,aAAa,GAAGD,OAAO,CAACE,QAAQ,CAAA;EACtC,EAAA,IAAGD,aAAa,EAAC;MACb,IAAME,GAAG,GAAGH,OAAO,CAAC;;EAEpB,IAAA,IAAMI,SAAS,GAAGD,GAAG,CAACE,UAAU,CAAA;EAChC,IAAA,IAAIC,MAAM,GAAGZ,SAAS,CAACvD,KAAK,CAAC,CAAA;EAC7B;MACAiE,SAAS,CAACG,YAAY,CAACD,MAAM,EAAEN,OAAO,CAACQ,WAAW,CAAC,CAAA;EACnDJ,IAAAA,SAAS,CAACK,WAAW,CAACN,GAAG,CAAC,CAAA;EAE1B,IAAA,OAAOG,MAAM,CAAA;EACjB,GACI;EAGR,CAAA;;EAEA;EACA;EACA;EACA;;EAEA;EACO,SAASI,QAAQ,CAAC/I,EAAE,EAAEgJ,IAAI,EAAE;EAC/B,EAAA,IAAMC,QAAQ,GAAGjJ,EAAE,CAACE,QAAQ,CAAC8I,IAAI,CAAC,CAAA;EAElC,EAAA,IAAGC,QAAQ,EAAC;EACRA,IAAAA,QAAQ,CAAC7L,OAAO,CAAC,UAAA8L,OAAO,EAAA;EAAA,MAAA,OAAIA,OAAO,CAACxL,IAAI,CAACsC,EAAE,CAAC,CAAA;OAAC,CAAA,CAAA;EACjD,GAAA;EACJ;;ECnGA,IAAImJ,MAAM,GAAG,EAAE,CAAA;EACf,IAAIC,YAAY,GAAG,CACf,cAAc,EACd,SAAS,EACT,aAAa,EACb,SAAS,EACT,cAAc,EACd,SAAS,EACT,eAAe,EACf,WAAW,EACX,WAAW,EACX,aAAa,EACb,eAAe,EACf,gBAAgB,CACnB,CAAA;EAEDA,YAAY,CAAChM,OAAO,CAAC,UAAAiM,KAAK,EAAI;IAC1BF,MAAM,CAACE,KAAK,CAAC,GAAG,UAACC,SAAS,EAAEC,QAAQ,EAAK;EACrC,IAAA,IAAGA,QAAQ,EAAC;EACR,MAAA,IAAGD,SAAS,EAAC;EACT,QAAA,OAAOA,SAAS,CAACE,MAAM,CAACD,QAAQ,CAAC,CAAA;EACrC,OAAC,MAAI;UACD,OAAO,CAACA,QAAQ,CAAC,CAAA;EACrB,OAAA;EACJ,KAAC,MAAK;EACF,MAAA,OAAOD,SAAS,CAAA;EACpB,KAAA;KACH,CAAA;EACL,CAAC,CAAC,CAAA;EAEK,SAASG,YAAY,CAAChI,MAAM,EAAE8B,KAAK,EAAE;IACxC,IAAMuB,OAAO,GAAG,EAAE,CAAA;EAElB,EAAA,KAAI,IAAI1F,GAAG,IAAIqC,MAAM,EAAC;MAClBiI,WAAW,CAACtK,GAAG,CAAC,CAAA;EACpB,GAAA;EAEA,EAAA,KAAI,IAAIA,IAAG,IAAImE,KAAK,EAAC;EACjB;EACA,IAAA,IAAG,CAAC9B,MAAM,CAACkI,cAAc,CAACvK,IAAG,CAAC,EAAC;QAC3BsK,WAAW,CAACtK,IAAG,CAAC,CAAA;EACpB,KAAA;EACJ,GAAA;IAEA,SAASsK,WAAW,CAACtK,GAAG,EAAE;EACtB;EACA,IAAA,IAAG+J,MAAM,CAAC/J,GAAG,CAAC,EAAC;EACX0F,MAAAA,OAAO,CAAC1F,GAAG,CAAC,GAAG+J,MAAM,CAAC/J,GAAG,CAAC,CAACqC,MAAM,CAACrC,GAAG,CAAC,EAAEmE,KAAK,CAACnE,GAAG,CAAC,CAAC,CAAA;EACvD,KAAC,MAAK;EACF;EACA;EACA0F,MAAAA,OAAO,CAAC1F,GAAG,CAAC,GAAGmE,KAAK,CAACnE,GAAG,CAAC,IAAIqC,MAAM,CAACrC,GAAG,CAAC,CAAA;EAC5C,KAAA;EACJ,GAAA;EAGA,EAAA,OAAO0F,OAAO,CAAA;EAClB;;EClDA;EACO,IAAM8E,SAAS,GAAG,SAAZA,SAAS,CAAazC,GAAG,EAAC;EACnC;EACAA,EAAAA,GAAG,CAACpK,SAAS,CAAC8M,KAAK,GAAG,UAAU/E,OAAO,EAAC;MACpC,IAAM9E,EAAE,GAAG,IAAI,CAAA;;EAEf;EACAA,IAAAA,EAAE,CAACE,QAAQ,GAAGuJ,YAAY,CAAC,IAAI,CAACK,WAAW,CAAChF,OAAO,EAAEA,OAAO,CAAC,CAAA;EAE7DiE,IAAAA,QAAQ,CAAC/I,EAAE,EAAE,cAAc,CAAC,CAAA;EAC5B;MACAD,SAAS,CAACC,EAAE,CAAC,CAAA;EACb+I,IAAAA,QAAQ,CAAC/I,EAAE,EAAE,SAAS,CAAC,CAAA;MAEvB,IAAG8E,OAAO,CAACuC,EAAE,EAAC;EACVrH,MAAAA,EAAE,CAAC+J,MAAM,CAACjF,OAAO,CAACuC,EAAE,CAAC,CAAA;EACzB,KAAA;KACH,CAAA;EACD;EACAF,EAAAA,GAAG,CAACpK,SAAS,CAACgN,MAAM,GAAG,UAAU1C,EAAE,EAAC;MAChC,IAAMrH,EAAE,GAAG,IAAI,CAAA;EACf,IAAA,IAAIC,GAAG,GAAGD,EAAE,CAACE,QAAQ,CAAA;EACrBmH,IAAAA,EAAE,GAAGT,QAAQ,CAACoD,aAAa,CAAC3C,EAAE,CAAC,CAAA;EAC/B,IAAA,IAAG,CAACpH,GAAG,CAACoE,MAAM,EAAC;EACX,MAAA,IAAID,QAAQ,CAAA;EACZ,MAAA,IAAG,CAACnE,GAAG,CAACmE,QAAQ,IAAIiD,EAAE,EAAC;EAAK;UACxBjD,QAAQ,GAAGiD,EAAE,CAAC4C,SAAS,CAAA;EAC3B,OAAC,MAAI;EACD;EACA,QAAA,IAAG5C,EAAE,EAAGjD,QAAQ,GAAGnE,GAAG,CAACmE,QAAQ,CAAA;EACnC,OAAA;EACA,MAAA,IAAGA,QAAQ,EAAC;EACR;EACA,QAAA,IAAMC,MAAM,GAAGF,iBAAiB,CAACC,QAAQ,CAAC,CAAA;UAC1CnE,GAAG,CAACoE,MAAM,GAAGA,MAAM,CAAA;EACvB,OAAA;EACJ,KAAA;;EAEA;EACAwD,IAAAA,cAAc,CAAC7H,EAAE,EAAEqH,EAAE,CAAC,CAAA;KACzB,CAAA;EACL,CAAC;;EC7CM,SAAS6C,aAAa,CAAC/C,GAAG,EAAE;EAC/BA,EAAAA,GAAG,CAACrC,OAAO,GAAG,EAAE,CAAA;EAChBqC,EAAAA,GAAG,CAACgD,KAAK,GAAG,UAAUA,KAAK,EAAC;MACxB,IAAI,CAACrF,OAAO,GAAG2E,YAAY,CAAC,IAAI,CAAC3E,OAAO,EAAEqF,KAAK,CAAC,CAAA;EAChD,IAAA,OAAO,IAAI,CAAA;KACd,CAAA;EACL;;ECJA,SAAShD,GAAG,CAACrC,OAAO,EAAC;EACjB,EAAA,IAAI,CAAC+E,KAAK,CAAC/E,OAAO,CAAC,CAAA;EACvB,CAAA;EAEAqC,GAAG,CAACpK,SAAS,CAACqN,SAAS,GAAGrE,QAAQ,CAAA;EAClC6D,SAAS,CAACzC,GAAG,CAAC,CAAA;EACdD,aAAa,CAACC,GAAG,CAAC,CAAA;EAClB+C,aAAa,CAAC/C,GAAG,CAAC;;;;;;;;"}